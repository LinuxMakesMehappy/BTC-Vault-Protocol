'use client'; \n\nimport React, { useState } from 'react'; \nimport { useI18n } from '../../components/I18nProvider'; \nimport { WalletManager } from '../../components/WalletManager'; \nimport { \n  WalletIcon, \n  ShieldCheckIcon, \n  DevicePhoneMobileIcon, \n  CheckCircleIcon, \n  ExclamationTriangleIcon\n } from '@heroicons/react/24/outline'; \nimport { motion } from 'framer-motion'; \n\ninterface WalletConnection { \n  type: 'solana' | 'bluewallet' | 'ledger'; \n  address: string; \n  connected: boolean; \n  balance ?: number; \n  lastActivity: number; \n } \n\nexport default function WalletsPage() { \n  const { t } = useI18n(); \n  const [connections, setConnections] = useState<WalletConnection[]>([]); \n\n  const handleWalletChange = (newConnections: WalletConnection[]) => { \n    setConnections(newConnections); \n }; \n\n  const walletFeatures = [\n    { \n      icon: WalletIcon, \n      title: 'Solana Wallets', \n      description: 'Connect popular Solana wallets like Phantom, Solflare, and more', \n      features: [\n        'One-click connection', \n        'Real-time balance updates', \n        'Transaction signing', \n        'Multi-wallet support'\n], \n      color: 'text-purple-600'\n }, \n    { \n      icon: DevicePhoneMobileIcon, \n      title: 'BlueWallet Integration', \n      description: 'Connect your mobile BlueWallet for Bitcoin operations', \n      features: [\n        'QR code connection', \n        'Lightning Network support', \n        'Bitcoin balance sync', \n        'Mobile-first design'\n], \n      color: 'text-blue-600'\n }, \n    { \n      icon: ShieldCheckIcon, \n      title: 'Ledger Hardware Wallet', \n      description: 'Maximum security with Ledger hardware wallet support', \n      features: [\n        'Hardware security', \n        'WebUSB connection', \n        'Transaction confirmation', \n        'Multi-app support'\n], \n      color: 'text-green-600'\n }\n]; \n\n  const securityTips = [\n    { \n      icon: ShieldCheckIcon, \n      title: 'Verify Transactions', \n      description: 'Always verify transaction details before signing'\n }, \n    { \n      icon: ExclamationTriangleIcon, \n      title: 'Keep Software Updated', \n      description: 'Regularly update your wallet software for security patches'\n }, \n    { \n      icon: CheckCircleIcon, \n      title: 'Use Hardware Wallets', \n      description: 'Consider hardware wallets for storing large amounts'\n }\n]; \n\n  return (\n < div className =\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n      {/* Header */}\n      <div className=\"bg-white dark:bg-gray-800 shadow-sm border-b border-gray-200 dark:border-gray-700\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n          <div className=\"flex items-center space-x-3\">\n            <WalletIcon className=\"w-8 h-8 text-blue-600 dark:text-blue-400\" />\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n                Wallet Management\n              </h1>\n              <p className=\"text-gray-600 dark:text-gray-300 mt-1\">\n                Connect and manage your wallets for VaultBTC operations\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          {/* Main Wallet Manager */}\n          <div className=\"lg:col-span-2\">\n            <WalletManager\n              onWalletChange={handleWalletChange}\n              allowMultiple={true}\n            />\n          </div>\n\n          {/* Sidebar */}\n          <div className=\"space-y-6\">\n            {/* Connection Status */}\n            <motion.div\n              initial={{ opacity: 0, x: 20 }}\n              animate={{ opacity: 1, x: 0 }}\n              className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6\"\n            >\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                Connection Status\n              </h3>\n              \n              {connections.length === 0 ? (\n                <div className=\"text-center py-4\">\n                  <WalletIcon className=\"w-12 h-12 text-gray-400 mx-auto mb-2\" />\n                  <p className=\"text-gray-500 dark:text-gray-400 text-sm\">\n                    No wallets connected\n                  </p>\n                </div>\n              ) : (\n                <div className=\"space-y-3\">\n                  {connections.map((conn, index) => (\n                    <div\n                      key={`${conn.type}-${index}`}\n                      className=\"flex items-center justify-between p-3 bg-green-50 dark:bg-green-900/20 rounded-lg border border-green-200 dark:border-green-800\"\n                    >\n                      <div className=\"flex items-center space-x-3\">\n                        <CheckCircleIcon className=\"w-5 h-5 text-green-600 dark:text-green-400\" />\n                        <div>\n                          <p className=\"text-sm font-medium text-green-900 dark:text-green-100\">\n                            {conn.type.charAt(0).toUpperCase() + conn.type.slice(1)}\n                          </p>\n                          <p className=\"text-xs text-green-700 dark:text-green-200 font-mono\">\n                            {`${conn.address.slice(0, 8)}...${conn.address.slice(-8)}`}\n                          </p>\n                        </div>\n                      </div>\n                      {conn.balance !== undefined && (\n                        <div className=\"text-right\">\n                          <p className=\"text-sm font-medium text-green-900 dark:text-green-100\">\n                            {conn.balance.toFixed(4)}\n                          </p>\n                          <p className=\"text-xs text-green-700 dark:text-green-200\">\n                            {conn.type === 'solana' ? 'SOL' : 'BTC'}\n                          </p>\n                        </div>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </motion.div>\n\n            {/* Security Tips */}\n            <motion.div\n              initial={{ opacity: 0, x: 20 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ delay: 0.1 }}\n              className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6\"\n            >\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                Security Tips\n              </h3>\n              \n              <div className=\"space-y-4\">\n                {securityTips.map((tip, index) => (\n                  <div key={index} className=\"flex items-start space-x-3\">\n                    <tip.icon className=\"w-5 h-5 text-blue-600 dark:text-blue-400 mt-0.5\" />\n                    <div>\n                      <h4 className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                        {tip.title}\n                      </h4>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-300 mt-1\">\n                        {tip.description}\n                      </p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </motion.div>\n\n            {/* Quick Stats */}\n            <motion.div\n              initial={{ opacity: 0, x: 20 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ delay: 0.2 }}\n              className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6\"\n            >\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                Quick Stats\n              </h3>\n              \n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600 dark:text-gray-300\">\n                    Connected Wallets\n                  </span>\n                  <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                    {connections.length}\n                  </span>\n                </div>\n                \n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600 dark:text-gray-300\">\n                    Wallet Types\n                  </span>\n                  <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                    {new Set(connections.map(c => c.type)).size}\n                  </span>\n                </div>\n                \n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600 dark:text-gray-300\">\n                    Last Activity\n                  </span>\n                  <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                    {connections.length > 0 \n                      ? new Date(Math.max(...connections.map(c => c.lastActivity))).toLocaleTimeString()\n                      : 'Never'\n                    }\n                  </span>\n                </div>\n              </div>\n            </motion.div>\n          </div>\n        </div>\n\n        {/* Wallet Features Grid */}\n        <div className=\"mt-12\">\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-8\">\n            Supported Wallet Types\n          </h2>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            {walletFeatures.map((wallet, index) => (\n              <motion.div\n                key={index}\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: index * 0.1 }}\n                className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6\"\n              >\n                <div className=\"flex items-center space-x-3 mb-4\">\n                  <div className=\"w-10 h-10 bg-gray-100 dark:bg-gray-700 rounded-lg flex items-center justify-center\">\n                    <wallet.icon className={`w-6 h-6 ${wallet.color}`} />\n                  </div>\n                  <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                    {wallet.title}\n                  </h3>\n                </div>\n                \n                <p className=\"text-gray-600 dark:text-gray-300 mb-4\">\n                  {wallet.description}\n                </p>\n                \n                <ul className=\"space-y-2\">\n                  {wallet.features.map((feature, featureIndex) => (\n                    <li key={featureIndex} className=\"flex items-center space-x-2\">\n                      <CheckCircleIcon className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm text-gray-600 dark:text-gray-300\">\n                        {feature}\n                      </span>\n                    </li>\n                  ))}\n                </ul>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"